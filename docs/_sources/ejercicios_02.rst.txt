Ejercicios de Clase 02
----------------------


1. Centrado manual de frases

   a. Utilizando la función ``len()`` centre una frase corta en una
      pantalla de 80 caracteres. Utilice la frase: “Primer ejercicio con
      caracteres”

   b. Agregue subrayado a la frase anterior

2. Para la cadena de caracteres:

.. code:: python

   s = '''Aquí me pongo a cantar
   Al compás de la vigüela,
   Que el hombre que lo desvela
   Una pena estraordinaria
   Como la ave solitaria
   Con el cantar se consuela.'''

-  Cuente la cantidad de veces que aparecen los substrings ``es``,
   ``la``, ``que``, ``co``, en los siguientes dos casos: distinguiendo
   entre mayúsculas y minúsculas, y no distinguiendo. Imprima el
   resultado.

-  Cree una lista, donde cada elemento es una línea del string ``s`` y
   encuentre la de mayor longitud. Imprima por pantalla la línea y su
   longitud.

-  Forme un nuevo string de 10 caracteres que contenga los 5 primeros y
   los 5 últimos del string anterior ``s``. Imprima por pantalla el
   nuevo string.

-  Forme un nuevo string que contenga los 10 caracteres centrales de
   ``s`` (utilizando un método que pueda aplicarse a otros strings
   también). Imprima por pantalla el nuevo string.

-  Cambie todas las letras “m” por “n” y todas las letras “n” por “m” en
   ``s``. Imprima el resultado por pantalla.

-  Debe entregar un programa llamado ``02_SuApellido.py`` (con su
   apellido, no la palabra “SuApellido”). El programa al correrlo con el
   comando ``python3 02_SuApellido.py`` debe imprimir:

::

   Nombre Apellido
   Clase 2
   Distinguiendo: 2 5 1 2
   Sin distinguir: 2 5 2 4
   Que el hombre que lo desvela : longitud=28
   Aquí uela.
   desvela 
   Un
   Aquí ne pomgo a camtar
   Al conpás de la vigüela,
   Que el honbre que lo desvela
   Uma pema estraordimaria
   Cono la ave solitaria
   Com el camtar se comsuela.

3. Manejos de listas:

   -  Cree la lista **N** de longitud 50, donde cada elemento es un
      número entero de 1 a 50 inclusive (Ayuda: vea la expresión
      ``range``).
   -  Invierta la lista.
   -  Extraiga una lista **N2** que contenga sólo los elementos pares de
      **N**.
   -  Extraiga una lista **N3** que contenga sólo aquellos elementos que
      sean el cuadrado de algún número entero.

4. Cree una lista de la forma ``L = [1,3,5,...,17,19,19,17,...,3,1]``

5. Operación “rara” sobre una lista:

   -  Defina la lista ``L = [0,1]``
   -  Realice la operación ``L.append(L)``
   -  Ahora imprima L, e imprima el último elemento de ``L``.
   -  Haga que una nueva lista ``L1`` tenga el valor del último elemento
      de ``L`` y repita el inciso anterior.

6. Utilizando funciones y métodos de *strings* en la cadena de
   caracteres:

.. code:: python

   s1='En un lugar de la Mancha de cuyo nombre no quiero acordarme'

-  Obtenga la cantidad de caracteres.

-  Imprima la frase anterior pero con cada palabra empezando en
   mayúsculas.

-  | Cuente cuantas letras ‘a’ tiene la frase, ¿cuántas vocales tiene?

-  Imprima el string ``s1`` centrado en una línea de 80 caracteres,
   rodeado de guiones en la forma:

   ———-En un lugar de la Mancha de cuyo nombre no quiero acordarme———–

-  Obtenga una lista **L1** donde cada elemento sea una palabra de la
   oración.

-  Cuente la cantidad de palabras en ``s1`` (utilizando python).

-  Ordene la lista **L1** en orden alfabético.

-  Ordene la lista **L1** tal que las palabras más cortas estén primero.

-  Ordene la lista **L1** tal que las palabras más largas estén primero.

-  Construya un string **s2** con la lista del resultado del punto
   anterior.

-  Encuentre la palabra más larga y la más corta de la frase.

7. Escriba un script que encuentre las raíces de la ecuación cuadrática
   :math:`a x^{2} + bx +c = 0`. Los valores de los parámetros defínalos
   en el mismo script, un poco más arriba.

8. Considere un polígono regular de :math:`N` lados inscripto en un
   círculo de radio unidad:

   -  Calcule el ángulo interior del polígono regular de :math:`N` lados
      (por ejemplo el de un triángulo es 60 grados, de un cuadrado es 90
      grados, y de un pentágono es 108 grados). Exprese el resultado en
      grados y en radianes para valores de
      :math:`N= 3, 5, 6, 8, 9, 10, 12`.
   -  ¿Puede calcular la longitud del lado de los polígonos regulares si
      se encuentran inscriptos en un círculo de radio unidad?

9. Escriba un *script* (llamado distancia1.py) que defina las variables
   velocidad y posición inicial :math:`v_{0}`, :math:`z_{0}`, la
   aceleración :math:`g`, y la masa :math:`m=1` kg a tiempo :math:`t=0`,
   y calcule e imprima la posición y velocidad a un tiempo posterior
   :math:`t`. Ejecute el programa para varios valores de posición y
   velocidad inicial para :math:`t=2` segundos. Recuerde que las
   ecuaciones de movimiento con aceleración constante son:

   .. math:: v = v_0 - g t  \\  z = z_0 + v_0 t - g t^2/2.

Adicionales
~~~~~~~~~~~

11. Calcular la suma:

    .. math:: s_{1} = \frac{1}{2} \left(\sum_{k=0}^{100}k \right)^{-1}

    *Ayuda*: busque información sobre la función ``sum()``

12. Construir una lista ``L2`` con 2000 elementos, todos iguales a
    ``0.0005``. Imprimir su suma utilizando la función ``sum`` y
    comparar con la función que existe en el módulo ``math`` para
    realizar suma de números de punto flotante.
